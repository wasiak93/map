{"version":3,"sources":["List.js","App.js","index.js"],"names":["List","removeMarker","items","geojson","features","map","feature","key","id","className","geometry","coordinates","toFixed","onClick","mapboxgl","accessToken","App","state","lng","lat","zoom","number","type","handleRemoveMarker","e","newFeatures","filter","setState","document","querySelectorAll","forEach","div","remove","this","marker","el","createElement","tag","Marker","draggable","setLngLat","addTo","globalMap","on","lngLat","getLngLat","markerId","push","Map","container","mapContainer","style","center","getCenter","getZoom","newFeaturesArray","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","ref","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68a3642b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst List = ({ removeMarker, geojson }) => {\n  const items = geojson.features.map((feature) => (\n    <tr key={feature.id}>\n      <td className=\"h4\">{feature.geometry.coordinates[0].toFixed(2)}&#176;</td>\n      <td className=\"h4\">{feature.geometry.coordinates[1].toFixed(2)}&#176;</td>\n      <td>\n        <button\n          className=\"btn btn-danger\"\n          id={feature.id}\n          onClick={() => removeMarker(feature.id)}\n        >\n          REMOVE\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <div className=\"list-wrapper\">\n      <table className=\"table table-striped table-hover table-sm\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th className=\"h4\">Longitude</th>\n            <th className=\"h4\">Latitude</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>{items}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport mapboxgl from \"mapbox-gl\";\nimport List from \"./List\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1Ijoia2FjcGVya2FjcGVya2FjcGVyIiwiYSI6ImNrOGxibTk5dTAyemkzbG9jZnRobGlydTgifQ.wFKwBhZ5v6xTEqvb-k8p8g\";\nclass App extends Component {\n  state = {\n    lng: 5,\n    lat: 34,\n    zoom: 2,\n    number: 0,\n    geojson: {\n      type: \"FeatureCollection\",\n      features: [],\n    },\n  };\n  globalMap;\n  handleRemoveMarker = (e) => {\n    let features = this.state.geojson.features;\n    const newFeatures = features.filter((features) => features.id !== e);\n    this.setState({\n      geojson: {\n        type: \"FeatureCollection\",\n        features: newFeatures,\n      },\n    });\n  };\n  componentDidUpdate() {\n    const markers = document.querySelectorAll(\".marker\");\n\n    markers.forEach((div) => div.remove());\n\n    this.state.geojson.features.forEach((marker) => {\n      let el = document.createElement(\"div\");\n      el.className = \"marker\";\n\n      const tag = new mapboxgl.Marker(el, { draggable: true })\n        .setLngLat(marker.geometry.coordinates)\n        .addTo(this.globalMap);\n\n      const onDragEnd = () => {\n        const lngLat = tag.getLngLat();\n        const markerId = marker.id;\n        let newFeatures = [];\n\n        this.state.geojson.features.forEach((feature) => {\n          if (feature.id === markerId) {\n            feature.geometry.coordinates = [lngLat.lng, lngLat.lat];\n            newFeatures.push(feature);\n          } else {\n            newFeatures.push(feature);\n          }\n        });\n\n        this.setState({\n          geojson: {\n            type: \"FeatureCollection\",\n            features: newFeatures,\n          },\n        });\n      };\n      tag.on(\"dragend\", onDragEnd);\n    });\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n    });\n    this.globalMap = map;\n\n    map.on(\"move\", () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2),\n      });\n    });\n    map.on(\"click\", (e) => {\n      const lng = e.lngLat.lng;\n      const lat = e.lngLat.lat;\n      const coordinates = [lng, lat];\n      let number = this.state.number;\n      number++;\n      const newFeaturesArray = [\n        ...this.state.geojson.features,\n        {\n          id: number,\n          geometry: {\n            type: \"Point\",\n            coordinates,\n          },\n        },\n      ];\n\n      this.setState({\n        number,\n        geojson: {\n          type: \"FeatureCollection\",\n          features: newFeaturesArray,\n        },\n      });\n    });\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"accordion\" id=\"accordionExample\">\n          <div className=\"card\">\n            <div className=\"card-header\" id=\"headingOne\">\n              <h2 className=\"mb-0\">\n                <button\n                  className=\"btn btn-link\"\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  data-target=\"#collapseOne\"\n                  aria-expanded=\"true\"\n                  aria-controls=\"collapseOne\"\n                >\n                  Map\n                </button>\n              </h2>\n            </div>\n\n            <div\n              id=\"collapseOne\"\n              className=\"collapse show\"\n              aria-labelledby=\"headingOne\"\n              data-parent=\"#accordionExample\"\n            >\n              <div className=\"card-body\">\n                <div\n                  ref={(el) => (this.mapContainer = el)}\n                  className=\"mb3 mapContainer\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"card\">\n            <div className=\"card-header\" id=\"headingTwo\">\n              <h2 className=\"mb-0\">\n                <button\n                  className=\"btn btn-link collapsed\"\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  data-target=\"#collapseTwo\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"collapseTwo\"\n                >\n                  Markers\n                </button>\n              </h2>\n            </div>\n            <div\n              id=\"collapseTwo\"\n              className=\"collapse\"\n              aria-labelledby=\"headingTwo\"\n              data-parent=\"#accordionExample\"\n            >\n              <div className=\"card-body\">\n                <List\n                  removeMarker={this.handleRemoveMarker}\n                  geojson={this.state.geojson}\n                  className=\"mb3\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./now-ui-kit-react-master/src/assets/css/now-ui-kit.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}